#------------------------------------------------------------------------------
#
# Warning, any modification in this Makefile will be over-written by the
# MethodCompiler. Customers can create "Makefile.custom", which will be
# included by this Makefile, to set customized flags required to successfully
# compile the method.
#
# The two important targets in this makefile are:
#	all   - build the library (if out of date)
#	clean - remove the library and all intermediate files
#
# Version: 9
#
### DO NOT EDIT THE SECTION BELOW.  IT IS BEING GENERATED BY methodTool.
#
#------------------------------------------------------------------------------

CXX := /usr/bin/g++
PREPROCESSOR := /opt/ltx/releases/U1709/x86_64_linux_3.10.0/bin/preprocessor
LIBRARY := /export/home/prod/allan/ST/prog/UAI0_R10P18U1709/LIBRARIES/DATALOG/x86_64_linux_3.10.0/libST_DLOG.un.so
BUILD_BITS := -m64
LDFLAGS := $(BUILD_BITS) -shared -Wl,-rpath='$$ORIGIN'
CXXFLAGS := $(BUILD_BITS) -std=c++1y -I/export/home/prod/allan/ST/prog/UAI0_R10P18U1709/LIBRARIES/DATALOG -I/export/home/prod/allan/ST/prog/UAI0_R10P18U1709/LIBRARIES/DATALOG/xtrf -I/opt/ltx/releases/U1709/x86_64_linux_3.10.0/unison/ltx/include -fmessage-length=0 $(LOCAL_CFLAGS) -fPIC -Wwrite-strings -fnon-call-exceptions -fcheck-new -Werror -Wreturn-type
OPTIMIZATION_FLAGS := -O2 -DNDEBUG
BUILD_PATH := /export/home/prod/allan/ST/prog/UAI0_R10P18U1709
LOCAL_DEST := /export/home/prod/allan/ST/prog/UAI0_R10P18U1709/LIBRARIES/DATALOG/build/ST_DLOG/x86_64_linux_3.10.0
LOCAL_DEST_REL_BUILD_PATH := LIBRARIES/DATALOG/build/ST_DLOG/x86_64_linux_3.10.0
BASE_PATH := /export/home/prod/allan/ST/prog/UAI0_R10P18U1709/LIBRARIES/DATALOG/xtrf
BUILD_RELATIVE_TO_BASE_PATH := LIBRARIES/DATALOG/xtrf
SOURCES := \
	ST_Datalog.cpp \
	tinyxml2.cpp \
	xtrf.cpp \

II_SOURCES := $(addprefix $(LOCAL_DEST_REL_BUILD_PATH)/, $(addsuffix .ii.cpp, $(SOURCES)))
MID_SOURCES := $(addprefix $(LOCAL_DEST_REL_BUILD_PATH)/, $(addsuffix .mid.cpp, $(SOURCES)))
OBJECTS := $(II_SOURCES:.cpp=.o) $(MID_SOURCES:.cpp=.o)
DEPEND_FILES := $(addprefix $(LOCAL_DEST_REL_BUILD_PATH)/,$(addsuffix .d,$(SOURCES)))

PRE_FILES := $(addprefix $(LOCAL_DEST_REL_BUILD_PATH)/,$(addsuffix .pre,$(SOURCES)))

SECONDARY_FILES := \
	$(DEPEND_FILES) \
	$(PRE_FILES) \
	$(II_SOURCES) \
	$(MID_SOURCES)

.SECONDARY: $(SECONDARY_FILES)

all:: $(LIBRARY)

first_rule: all

$(LIBRARY): $(OBJECTS)
	mkdir -p $(dir $@)
	$(CXX) -o $@ $^ $(LDFLAGS)
	/usr/bin/strip --strip-debug $@

$(LOCAL_DEST_REL_BUILD_PATH)/%.pre: $(BASE_PATH)/%
	mkdir -p $(dir $@)
	$(CXX) -E $(OPTIMIZATION_FLAGS) $(CXXFLAGS) $(<:$(BASE_PATH)/%=$(BUILD_RELATIVE_TO_BASE_PATH)/%) -o $@ -MMD -MP -MT $(@:$(BASE_PATH)/%=$(BUILD_RELATIVE_TO_BASE_PATH)/%) -MF $(@:%.pre=%.Td)
	mv $(@:%.pre=%.Td) $(@:%.pre=%.d)

%.mid.cpp %.ii.cpp: %.pre
	$(PREPROCESSOR) $< $(<:%.pre=%.ii.cpp) $(<:%.pre=%.mid.cpp)
	rm $<

%.ii.o: %.ii.cpp
	$(PRECXX) $(CXX) -c -fpreprocessed $(CXXFLAGS) $(OPTIMIZATION_FLAGS) -o $@ $^
	/usr/bin/strip --strip-debug $@
	rm $^

%.mid.o: %.mid.cpp
	$(PRECXX) $(CXX) -c $(CXXFLAGS) -O2 -DNDEBUG -o $@ $^
	/usr/bin/strip --strip-debug $@
	rm $^

.PHONY: clean prebuild compile library depend
clean:
	rm -f $(LIBRARY) $(OBJECTS) $(MID_OBJECTS) $(SECONDARY_FILES)

prebuild: $(II_SOURCES) $(MID_SOURCES)

compile: $(OBJECTS)

library: $(LIBRARY)

depend: $(PRE_FILES)

ifneq (clean,$(filter clean, $(MAKECMDGOALS)))
-include $(DEPEND_FILES)
else
.NOTPARALLEL:
endif

